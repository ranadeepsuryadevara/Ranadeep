{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs3/helpers/objectWithoutProperties\";\nvar _excluded = [\"http\", \"fetch\", \"spec\", \"operationId\", \"pathName\", \"method\", \"parameters\", \"securities\"];\nimport _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport getIn from 'lodash/get';\nimport url from 'url';\nimport cookie from 'cookie';\nimport { isPlainObject } from 'is-plain-object';\nimport stockHttp, { mergeInQueryOrForm } from '../http/index.js';\nimport createError from '../specmap/lib/create-error.js';\nimport SWAGGER2_PARAMETER_BUILDERS from './swagger2/parameter-builders.js';\nimport * as OAS3_PARAMETER_BUILDERS from './oas3/parameter-builders.js';\nimport oas3BuildRequest from './oas3/build-request.js';\nimport swagger2BuildRequest from './swagger2/build-request.js';\nimport { getOperationRaw, legacyIdFromPathMethod, isOAS3 } from '../helpers/index.js';\nvar arrayOrEmpty = function arrayOrEmpty(ar) {\n  return Array.isArray(ar) ? ar : [];\n};\nvar OperationNotFoundError = createError('OperationNotFoundError', function cb(message, extra, oriError) {\n  this.originalError = oriError;\n  _Object$assign(this, extra || {});\n});\nvar findParametersWithName = function findParametersWithName(name, parameters) {\n  return _filterInstanceProperty(parameters).call(parameters, function (p) {\n    return p.name === name;\n  });\n}; // removes parameters that have duplicate 'in' and 'name' properties\n\nvar deduplicateParameters = function deduplicateParameters(parameters) {\n  var paramsMap = {};\n  parameters.forEach(function (p) {\n    if (!paramsMap[p.in]) {\n      paramsMap[p.in] = {};\n    }\n    paramsMap[p.in][p.name] = p;\n  });\n  var dedupedParameters = [];\n  _Object$keys(paramsMap).forEach(function (i) {\n    _Object$keys(paramsMap[i]).forEach(function (p) {\n      dedupedParameters.push(paramsMap[i][p]);\n    });\n  });\n  return dedupedParameters;\n}; // For stubbing in tests\n\nexport var self = {\n  buildRequest: buildRequest\n}; // Execute request, with the given operationId and parameters\n// pathName/method or operationId is optional\n\nexport function execute(_ref) {\n  var userHttp = _ref.http,\n    fetch = _ref.fetch,\n    spec = _ref.spec,\n    operationId = _ref.operationId,\n    pathName = _ref.pathName,\n    method = _ref.method,\n    parameters = _ref.parameters,\n    securities = _ref.securities,\n    extras = _objectWithoutProperties(_ref, _excluded);\n\n  // Provide default fetch implementation\n  var http = userHttp || fetch || stockHttp; // Default to _our_ http\n\n  if (pathName && method && !operationId) {\n    operationId = legacyIdFromPathMethod(pathName, method);\n  }\n  var request = self.buildRequest(_objectSpread({\n    spec: spec,\n    operationId: operationId,\n    parameters: parameters,\n    securities: securities,\n    http: http\n  }, extras));\n  if (request.body && (isPlainObject(request.body) || Array.isArray(request.body))) {\n    request.body = _JSON$stringify(request.body);\n  } // Build request and execute it\n\n  return http(request);\n} // Build a request, which can be handled by the `http.js` implementation.\n\nexport function buildRequest(options) {\n  var _context, _context2;\n  var spec = options.spec,\n    operationId = options.operationId,\n    responseContentType = options.responseContentType,\n    scheme = options.scheme,\n    requestInterceptor = options.requestInterceptor,\n    responseInterceptor = options.responseInterceptor,\n    contextUrl = options.contextUrl,\n    userFetch = options.userFetch,\n    server = options.server,\n    serverVariables = options.serverVariables,\n    http = options.http,\n    signal = options.signal;\n  var parameters = options.parameters,\n    parameterBuilders = options.parameterBuilders;\n  var specIsOAS3 = isOAS3(spec);\n  if (!parameterBuilders) {\n    // user did not provide custom parameter builders\n    if (specIsOAS3) {\n      parameterBuilders = OAS3_PARAMETER_BUILDERS;\n    } else {\n      parameterBuilders = SWAGGER2_PARAMETER_BUILDERS;\n    }\n  } // Set credentials with 'http.withCredentials' value\n\n  var credentials = http && http.withCredentials ? 'include' : 'same-origin'; // Base Template\n\n  var req = {\n    url: '',\n    credentials: credentials,\n    headers: {},\n    cookies: {}\n  };\n  if (signal) {\n    req.signal = signal;\n  }\n  if (requestInterceptor) {\n    req.requestInterceptor = requestInterceptor;\n  }\n  if (responseInterceptor) {\n    req.responseInterceptor = responseInterceptor;\n  }\n  if (userFetch) {\n    req.userFetch = userFetch;\n  }\n  var operationRaw = getOperationRaw(spec, operationId);\n  if (!operationRaw) {\n    throw new OperationNotFoundError(\"Operation \".concat(operationId, \" not found\"));\n  }\n  var _operationRaw$operati = operationRaw.operation,\n    operation = _operationRaw$operati === void 0 ? {} : _operationRaw$operati,\n    method = operationRaw.method,\n    pathName = operationRaw.pathName;\n  req.url += baseUrl({\n    spec: spec,\n    scheme: scheme,\n    contextUrl: contextUrl,\n    server: server,\n    serverVariables: serverVariables,\n    pathName: pathName,\n    method: method\n  }); // Mostly for testing\n\n  if (!operationId) {\n    // Not removing req.cookies causes testing issues and would\n    // change our interface, so we're always sure to remove it.\n    // See the same statement lower down in this function for\n    // more context.\n    delete req.cookies;\n    return req;\n  }\n  req.url += pathName; // Have not yet replaced the path parameters\n\n  req.method = \"\".concat(method).toUpperCase();\n  parameters = parameters || {};\n  var path = spec.paths[pathName] || {};\n  if (responseContentType) {\n    req.headers.accept = responseContentType;\n  }\n  var combinedParameters = deduplicateParameters(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = []).call(_context2, arrayOrEmpty(operation.parameters)) // operation parameters\n  ).call(_context, arrayOrEmpty(path.parameters))); // path parameters\n  // REVIEW: OAS3: have any key names or parameter shapes changed?\n  // Any new features that need to be plugged in here?\n  // Add values to request\n\n  combinedParameters.forEach(function (parameter) {\n    var builder = parameterBuilders[parameter.in];\n    var value;\n    if (parameter.in === 'body' && parameter.schema && parameter.schema.properties) {\n      value = parameters;\n    }\n    value = parameter && parameter.name && parameters[parameter.name];\n    if (typeof value === 'undefined') {\n      var _context3;\n\n      // check for `name-in` formatted key\n      value = parameter && parameter.name && parameters[_concatInstanceProperty(_context3 = \"\".concat(parameter.in, \".\")).call(_context3, parameter.name)];\n    } else if (findParametersWithName(parameter.name, combinedParameters).length > 1) {\n      var _context4;\n\n      // value came from `parameters[parameter.name]`\n      // check to see if this is an ambiguous parameter\n      // eslint-disable-next-line no-console\n      console.warn(_concatInstanceProperty(_context4 = \"Parameter '\".concat(parameter.name, \"' is ambiguous because the defined spec has more than one parameter with the name: '\")).call(_context4, parameter.name, \"' and the passed-in parameter values did not define an 'in' value.\"));\n    }\n    if (value === null) {\n      return;\n    }\n    if (typeof parameter.default !== 'undefined' && typeof value === 'undefined') {\n      value = parameter.default;\n    }\n    if (typeof value === 'undefined' && parameter.required && !parameter.allowEmptyValue) {\n      throw new Error(\"Required parameter \".concat(parameter.name, \" is not provided\"));\n    }\n    if (specIsOAS3 && parameter.schema && parameter.schema.type === 'object' && typeof value === 'string') {\n      try {\n        value = JSON.parse(value);\n      } catch (e) {\n        throw new Error('Could not parse object parameter value string as JSON');\n      }\n    }\n    if (builder) {\n      builder({\n        req: req,\n        parameter: parameter,\n        value: value,\n        operation: operation,\n        spec: spec\n      });\n    }\n  }); // Do version-specific tasks, then return those results.\n\n  var versionSpecificOptions = _objectSpread(_objectSpread({}, options), {}, {\n    operation: operation\n  });\n  if (specIsOAS3) {\n    req = oas3BuildRequest(versionSpecificOptions, req);\n  } else {\n    // If not OAS3, then treat as Swagger2.\n    req = swagger2BuildRequest(versionSpecificOptions, req);\n  } // If the cookie convenience object exists in our request,\n  // serialize its content and then delete the cookie object.\n\n  if (req.cookies && _Object$keys(req.cookies).length) {\n    var cookieString = _Object$keys(req.cookies).reduce(function (prev, cookieName) {\n      var cookieValue = req.cookies[cookieName];\n      var prefix = prev ? '&' : '';\n      var stringified = cookie.serialize(cookieName, cookieValue);\n      return prev + prefix + stringified;\n    }, '');\n    req.headers.Cookie = cookieString;\n  }\n  if (req.cookies) {\n    // even if no cookies were defined, we need to remove\n    // the cookies key from our request, or many many legacy\n    // tests will break.\n    delete req.cookies;\n  } // Will add the query object into the URL, if it exists\n  // ... will also create a FormData instance, if multipart/form-data (eg: a file)\n\n  mergeInQueryOrForm(req);\n  return req;\n}\nvar stripNonAlpha = function stripNonAlpha(str) {\n  return str ? str.replace(/\\W/g, '') : null;\n}; // be careful when modifying this! it is a publicly-exposed method.\n\nexport function baseUrl(obj) {\n  var specIsOAS3 = isOAS3(obj.spec);\n  return specIsOAS3 ? oas3BaseUrl(obj) : swagger2BaseUrl(obj);\n}\nfunction oas3BaseUrl(_ref2) {\n  var spec = _ref2.spec,\n    pathName = _ref2.pathName,\n    method = _ref2.method,\n    server = _ref2.server,\n    contextUrl = _ref2.contextUrl,\n    _ref2$serverVariables = _ref2.serverVariables,\n    serverVariables = _ref2$serverVariables === void 0 ? {} : _ref2$serverVariables;\n  var servers = getIn(spec, ['paths', pathName, (method || '').toLowerCase(), 'servers']) || getIn(spec, ['paths', pathName, 'servers']) || getIn(spec, ['servers']);\n  var selectedServerUrl = '';\n  var selectedServerObj = null;\n  if (server && servers && servers.length) {\n    var serverUrls = _mapInstanceProperty(servers).call(servers, function (srv) {\n      return srv.url;\n    });\n    if (serverUrls.indexOf(server) > -1) {\n      selectedServerUrl = server;\n      selectedServerObj = servers[serverUrls.indexOf(server)];\n    }\n  }\n  if (!selectedServerUrl && servers && servers.length) {\n    // default to the first server if we don't have one by now\n    selectedServerUrl = servers[0].url; // eslint-disable-line semi\n\n    var _servers = _slicedToArray(servers, 1);\n    selectedServerObj = _servers[0];\n  }\n  if (selectedServerUrl.indexOf('{') > -1) {\n    // do variable substitution\n    var varNames = getVariableTemplateNames(selectedServerUrl);\n    varNames.forEach(function (vari) {\n      if (selectedServerObj.variables && selectedServerObj.variables[vari]) {\n        // variable is defined in server\n        var variableDefinition = selectedServerObj.variables[vari];\n        var variableValue = serverVariables[vari] || variableDefinition.default;\n        var re = new RegExp(\"{\".concat(vari, \"}\"), 'g');\n        selectedServerUrl = selectedServerUrl.replace(re, variableValue);\n      }\n    });\n  }\n  return buildOas3UrlWithContext(selectedServerUrl, contextUrl);\n}\nfunction buildOas3UrlWithContext() {\n  var ourUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var contextUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  // relative server url should be resolved against contextUrl\n  var parsedUrl = ourUrl && contextUrl ? url.parse(url.resolve(contextUrl, ourUrl)) : url.parse(ourUrl);\n  var parsedContextUrl = url.parse(contextUrl);\n  var computedScheme = stripNonAlpha(parsedUrl.protocol) || stripNonAlpha(parsedContextUrl.protocol) || '';\n  var computedHost = parsedUrl.host || parsedContextUrl.host;\n  var computedPath = parsedUrl.pathname || '';\n  var res;\n  if (computedScheme && computedHost) {\n    var _context5;\n    res = _concatInstanceProperty(_context5 = \"\".concat(computedScheme, \"://\")).call(_context5, computedHost + computedPath); // If last character is '/', trim it off\n  } else {\n    res = computedPath;\n  }\n  return res[res.length - 1] === '/' ? _sliceInstanceProperty(res).call(res, 0, -1) : res;\n}\nfunction getVariableTemplateNames(str) {\n  var results = [];\n  var re = /{([^}]+)}/g;\n  var text; // eslint-disable-next-line no-cond-assign\n\n  while (text = re.exec(str)) {\n    results.push(text[1]);\n  }\n  return results;\n} // Compose the baseUrl ( scheme + host + basePath )\n\nfunction swagger2BaseUrl(_ref3) {\n  var spec = _ref3.spec,\n    scheme = _ref3.scheme,\n    _ref3$contextUrl = _ref3.contextUrl,\n    contextUrl = _ref3$contextUrl === void 0 ? '' : _ref3$contextUrl;\n  var parsedContextUrl = url.parse(contextUrl);\n  var firstSchemeInSpec = Array.isArray(spec.schemes) ? spec.schemes[0] : null;\n  var computedScheme = scheme || firstSchemeInSpec || stripNonAlpha(parsedContextUrl.protocol) || 'http';\n  var computedHost = spec.host || parsedContextUrl.host || '';\n  var computedPath = spec.basePath || '';\n  var res;\n  if (computedScheme && computedHost) {\n    var _context6;\n\n    // we have what we need for an absolute URL\n    res = _concatInstanceProperty(_context6 = \"\".concat(computedScheme, \"://\")).call(_context6, computedHost + computedPath);\n  } else {\n    // if not, a relative URL will have to do\n    res = computedPath;\n  } // If last character is '/', trim it off\n\n  return res[res.length - 1] === '/' ? _sliceInstanceProperty(res).call(res, 0, -1) : res;\n}","map":{"version":3,"names":["_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","_Object$assign","_filterInstanceProperty","_Object$keys","_JSON$stringify","_concatInstanceProperty","_mapInstanceProperty","_sliceInstanceProperty","getIn","url","cookie","isPlainObject","stockHttp","mergeInQueryOrForm","createError","SWAGGER2_PARAMETER_BUILDERS","OAS3_PARAMETER_BUILDERS","oas3BuildRequest","swagger2BuildRequest","getOperationRaw","legacyIdFromPathMethod","isOAS3","arrayOrEmpty","ar","Array","isArray","OperationNotFoundError","cb","message","extra","oriError","originalError","findParametersWithName","name","parameters","call","p","deduplicateParameters","paramsMap","forEach","in","dedupedParameters","i","push","self","buildRequest","execute","_ref","userHttp","http","fetch","spec","operationId","pathName","method","securities","extras","request","body","options","_context","_context2","responseContentType","scheme","requestInterceptor","responseInterceptor","contextUrl","userFetch","server","serverVariables","signal","parameterBuilders","specIsOAS3","credentials","withCredentials","req","headers","cookies","operationRaw","concat","_operationRaw$operati","operation","baseUrl","toUpperCase","path","paths","accept","combinedParameters","parameter","builder","value","schema","properties","_context3","length","_context4","console","warn","default","required","allowEmptyValue","Error","type","JSON","parse","e","versionSpecificOptions","cookieString","reduce","prev","cookieName","cookieValue","prefix","stringified","serialize","Cookie","stripNonAlpha","str","replace","obj","oas3BaseUrl","swagger2BaseUrl","_ref2","_ref2$serverVariables","servers","toLowerCase","selectedServerUrl","selectedServerObj","serverUrls","srv","indexOf","_servers","varNames","getVariableTemplateNames","vari","variables","variableDefinition","variableValue","re","RegExp","buildOas3UrlWithContext","ourUrl","arguments","undefined","parsedUrl","resolve","parsedContextUrl","computedScheme","protocol","computedHost","host","computedPath","pathname","res","_context5","results","text","exec","_ref3","_ref3$contextUrl","firstSchemeInSpec","schemes","basePath","_context6"],"sources":["C:/Users/JRS GROUPS/Desktop/React/ftask/node_modules/swagger-client/es/execute/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs3/helpers/objectWithoutProperties\";\nvar _excluded = [\"http\", \"fetch\", \"spec\", \"operationId\", \"pathName\", \"method\", \"parameters\", \"securities\"];\nimport _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport getIn from 'lodash/get';\nimport url from 'url';\nimport cookie from 'cookie';\nimport { isPlainObject } from 'is-plain-object';\nimport stockHttp, { mergeInQueryOrForm } from '../http/index.js';\nimport createError from '../specmap/lib/create-error.js';\nimport SWAGGER2_PARAMETER_BUILDERS from './swagger2/parameter-builders.js';\nimport * as OAS3_PARAMETER_BUILDERS from './oas3/parameter-builders.js';\nimport oas3BuildRequest from './oas3/build-request.js';\nimport swagger2BuildRequest from './swagger2/build-request.js';\nimport { getOperationRaw, legacyIdFromPathMethod, isOAS3 } from '../helpers/index.js';\n\nvar arrayOrEmpty = function arrayOrEmpty(ar) {\n  return Array.isArray(ar) ? ar : [];\n};\n\nvar OperationNotFoundError = createError('OperationNotFoundError', function cb(message, extra, oriError) {\n  this.originalError = oriError;\n\n  _Object$assign(this, extra || {});\n});\n\nvar findParametersWithName = function findParametersWithName(name, parameters) {\n  return _filterInstanceProperty(parameters).call(parameters, function (p) {\n    return p.name === name;\n  });\n}; // removes parameters that have duplicate 'in' and 'name' properties\n\n\nvar deduplicateParameters = function deduplicateParameters(parameters) {\n  var paramsMap = {};\n  parameters.forEach(function (p) {\n    if (!paramsMap[p.in]) {\n      paramsMap[p.in] = {};\n    }\n\n    paramsMap[p.in][p.name] = p;\n  });\n  var dedupedParameters = [];\n\n  _Object$keys(paramsMap).forEach(function (i) {\n    _Object$keys(paramsMap[i]).forEach(function (p) {\n      dedupedParameters.push(paramsMap[i][p]);\n    });\n  });\n\n  return dedupedParameters;\n}; // For stubbing in tests\n\n\nexport var self = {\n  buildRequest: buildRequest\n}; // Execute request, with the given operationId and parameters\n// pathName/method or operationId is optional\n\nexport function execute(_ref) {\n  var userHttp = _ref.http,\n      fetch = _ref.fetch,\n      spec = _ref.spec,\n      operationId = _ref.operationId,\n      pathName = _ref.pathName,\n      method = _ref.method,\n      parameters = _ref.parameters,\n      securities = _ref.securities,\n      extras = _objectWithoutProperties(_ref, _excluded);\n\n  // Provide default fetch implementation\n  var http = userHttp || fetch || stockHttp; // Default to _our_ http\n\n  if (pathName && method && !operationId) {\n    operationId = legacyIdFromPathMethod(pathName, method);\n  }\n\n  var request = self.buildRequest(_objectSpread({\n    spec: spec,\n    operationId: operationId,\n    parameters: parameters,\n    securities: securities,\n    http: http\n  }, extras));\n\n  if (request.body && (isPlainObject(request.body) || Array.isArray(request.body))) {\n    request.body = _JSON$stringify(request.body);\n  } // Build request and execute it\n\n\n  return http(request);\n} // Build a request, which can be handled by the `http.js` implementation.\n\nexport function buildRequest(options) {\n  var _context, _context2;\n\n  var spec = options.spec,\n      operationId = options.operationId,\n      responseContentType = options.responseContentType,\n      scheme = options.scheme,\n      requestInterceptor = options.requestInterceptor,\n      responseInterceptor = options.responseInterceptor,\n      contextUrl = options.contextUrl,\n      userFetch = options.userFetch,\n      server = options.server,\n      serverVariables = options.serverVariables,\n      http = options.http,\n      signal = options.signal;\n  var parameters = options.parameters,\n      parameterBuilders = options.parameterBuilders;\n  var specIsOAS3 = isOAS3(spec);\n\n  if (!parameterBuilders) {\n    // user did not provide custom parameter builders\n    if (specIsOAS3) {\n      parameterBuilders = OAS3_PARAMETER_BUILDERS;\n    } else {\n      parameterBuilders = SWAGGER2_PARAMETER_BUILDERS;\n    }\n  } // Set credentials with 'http.withCredentials' value\n\n\n  var credentials = http && http.withCredentials ? 'include' : 'same-origin'; // Base Template\n\n  var req = {\n    url: '',\n    credentials: credentials,\n    headers: {},\n    cookies: {}\n  };\n\n  if (signal) {\n    req.signal = signal;\n  }\n\n  if (requestInterceptor) {\n    req.requestInterceptor = requestInterceptor;\n  }\n\n  if (responseInterceptor) {\n    req.responseInterceptor = responseInterceptor;\n  }\n\n  if (userFetch) {\n    req.userFetch = userFetch;\n  }\n\n  var operationRaw = getOperationRaw(spec, operationId);\n\n  if (!operationRaw) {\n    throw new OperationNotFoundError(\"Operation \".concat(operationId, \" not found\"));\n  }\n\n  var _operationRaw$operati = operationRaw.operation,\n      operation = _operationRaw$operati === void 0 ? {} : _operationRaw$operati,\n      method = operationRaw.method,\n      pathName = operationRaw.pathName;\n  req.url += baseUrl({\n    spec: spec,\n    scheme: scheme,\n    contextUrl: contextUrl,\n    server: server,\n    serverVariables: serverVariables,\n    pathName: pathName,\n    method: method\n  }); // Mostly for testing\n\n  if (!operationId) {\n    // Not removing req.cookies causes testing issues and would\n    // change our interface, so we're always sure to remove it.\n    // See the same statement lower down in this function for\n    // more context.\n    delete req.cookies;\n    return req;\n  }\n\n  req.url += pathName; // Have not yet replaced the path parameters\n\n  req.method = \"\".concat(method).toUpperCase();\n  parameters = parameters || {};\n  var path = spec.paths[pathName] || {};\n\n  if (responseContentType) {\n    req.headers.accept = responseContentType;\n  }\n\n  var combinedParameters = deduplicateParameters(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = []).call(_context2, arrayOrEmpty(operation.parameters)) // operation parameters\n  ).call(_context, arrayOrEmpty(path.parameters))); // path parameters\n  // REVIEW: OAS3: have any key names or parameter shapes changed?\n  // Any new features that need to be plugged in here?\n  // Add values to request\n\n  combinedParameters.forEach(function (parameter) {\n    var builder = parameterBuilders[parameter.in];\n    var value;\n\n    if (parameter.in === 'body' && parameter.schema && parameter.schema.properties) {\n      value = parameters;\n    }\n\n    value = parameter && parameter.name && parameters[parameter.name];\n\n    if (typeof value === 'undefined') {\n      var _context3;\n\n      // check for `name-in` formatted key\n      value = parameter && parameter.name && parameters[_concatInstanceProperty(_context3 = \"\".concat(parameter.in, \".\")).call(_context3, parameter.name)];\n    } else if (findParametersWithName(parameter.name, combinedParameters).length > 1) {\n      var _context4;\n\n      // value came from `parameters[parameter.name]`\n      // check to see if this is an ambiguous parameter\n      // eslint-disable-next-line no-console\n      console.warn(_concatInstanceProperty(_context4 = \"Parameter '\".concat(parameter.name, \"' is ambiguous because the defined spec has more than one parameter with the name: '\")).call(_context4, parameter.name, \"' and the passed-in parameter values did not define an 'in' value.\"));\n    }\n\n    if (value === null) {\n      return;\n    }\n\n    if (typeof parameter.default !== 'undefined' && typeof value === 'undefined') {\n      value = parameter.default;\n    }\n\n    if (typeof value === 'undefined' && parameter.required && !parameter.allowEmptyValue) {\n      throw new Error(\"Required parameter \".concat(parameter.name, \" is not provided\"));\n    }\n\n    if (specIsOAS3 && parameter.schema && parameter.schema.type === 'object' && typeof value === 'string') {\n      try {\n        value = JSON.parse(value);\n      } catch (e) {\n        throw new Error('Could not parse object parameter value string as JSON');\n      }\n    }\n\n    if (builder) {\n      builder({\n        req: req,\n        parameter: parameter,\n        value: value,\n        operation: operation,\n        spec: spec\n      });\n    }\n  }); // Do version-specific tasks, then return those results.\n\n  var versionSpecificOptions = _objectSpread(_objectSpread({}, options), {}, {\n    operation: operation\n  });\n\n  if (specIsOAS3) {\n    req = oas3BuildRequest(versionSpecificOptions, req);\n  } else {\n    // If not OAS3, then treat as Swagger2.\n    req = swagger2BuildRequest(versionSpecificOptions, req);\n  } // If the cookie convenience object exists in our request,\n  // serialize its content and then delete the cookie object.\n\n\n  if (req.cookies && _Object$keys(req.cookies).length) {\n    var cookieString = _Object$keys(req.cookies).reduce(function (prev, cookieName) {\n      var cookieValue = req.cookies[cookieName];\n      var prefix = prev ? '&' : '';\n      var stringified = cookie.serialize(cookieName, cookieValue);\n      return prev + prefix + stringified;\n    }, '');\n\n    req.headers.Cookie = cookieString;\n  }\n\n  if (req.cookies) {\n    // even if no cookies were defined, we need to remove\n    // the cookies key from our request, or many many legacy\n    // tests will break.\n    delete req.cookies;\n  } // Will add the query object into the URL, if it exists\n  // ... will also create a FormData instance, if multipart/form-data (eg: a file)\n\n\n  mergeInQueryOrForm(req);\n  return req;\n}\n\nvar stripNonAlpha = function stripNonAlpha(str) {\n  return str ? str.replace(/\\W/g, '') : null;\n}; // be careful when modifying this! it is a publicly-exposed method.\n\n\nexport function baseUrl(obj) {\n  var specIsOAS3 = isOAS3(obj.spec);\n  return specIsOAS3 ? oas3BaseUrl(obj) : swagger2BaseUrl(obj);\n}\n\nfunction oas3BaseUrl(_ref2) {\n  var spec = _ref2.spec,\n      pathName = _ref2.pathName,\n      method = _ref2.method,\n      server = _ref2.server,\n      contextUrl = _ref2.contextUrl,\n      _ref2$serverVariables = _ref2.serverVariables,\n      serverVariables = _ref2$serverVariables === void 0 ? {} : _ref2$serverVariables;\n  var servers = getIn(spec, ['paths', pathName, (method || '').toLowerCase(), 'servers']) || getIn(spec, ['paths', pathName, 'servers']) || getIn(spec, ['servers']);\n  var selectedServerUrl = '';\n  var selectedServerObj = null;\n\n  if (server && servers && servers.length) {\n    var serverUrls = _mapInstanceProperty(servers).call(servers, function (srv) {\n      return srv.url;\n    });\n\n    if (serverUrls.indexOf(server) > -1) {\n      selectedServerUrl = server;\n      selectedServerObj = servers[serverUrls.indexOf(server)];\n    }\n  }\n\n  if (!selectedServerUrl && servers && servers.length) {\n    // default to the first server if we don't have one by now\n    selectedServerUrl = servers[0].url; // eslint-disable-line semi\n\n    var _servers = _slicedToArray(servers, 1);\n\n    selectedServerObj = _servers[0];\n  }\n\n  if (selectedServerUrl.indexOf('{') > -1) {\n    // do variable substitution\n    var varNames = getVariableTemplateNames(selectedServerUrl);\n    varNames.forEach(function (vari) {\n      if (selectedServerObj.variables && selectedServerObj.variables[vari]) {\n        // variable is defined in server\n        var variableDefinition = selectedServerObj.variables[vari];\n        var variableValue = serverVariables[vari] || variableDefinition.default;\n        var re = new RegExp(\"{\".concat(vari, \"}\"), 'g');\n        selectedServerUrl = selectedServerUrl.replace(re, variableValue);\n      }\n    });\n  }\n\n  return buildOas3UrlWithContext(selectedServerUrl, contextUrl);\n}\n\nfunction buildOas3UrlWithContext() {\n  var ourUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var contextUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  // relative server url should be resolved against contextUrl\n  var parsedUrl = ourUrl && contextUrl ? url.parse(url.resolve(contextUrl, ourUrl)) : url.parse(ourUrl);\n  var parsedContextUrl = url.parse(contextUrl);\n  var computedScheme = stripNonAlpha(parsedUrl.protocol) || stripNonAlpha(parsedContextUrl.protocol) || '';\n  var computedHost = parsedUrl.host || parsedContextUrl.host;\n  var computedPath = parsedUrl.pathname || '';\n  var res;\n\n  if (computedScheme && computedHost) {\n    var _context5;\n\n    res = _concatInstanceProperty(_context5 = \"\".concat(computedScheme, \"://\")).call(_context5, computedHost + computedPath); // If last character is '/', trim it off\n  } else {\n    res = computedPath;\n  }\n\n  return res[res.length - 1] === '/' ? _sliceInstanceProperty(res).call(res, 0, -1) : res;\n}\n\nfunction getVariableTemplateNames(str) {\n  var results = [];\n  var re = /{([^}]+)}/g;\n  var text; // eslint-disable-next-line no-cond-assign\n\n  while (text = re.exec(str)) {\n    results.push(text[1]);\n  }\n\n  return results;\n} // Compose the baseUrl ( scheme + host + basePath )\n\n\nfunction swagger2BaseUrl(_ref3) {\n  var spec = _ref3.spec,\n      scheme = _ref3.scheme,\n      _ref3$contextUrl = _ref3.contextUrl,\n      contextUrl = _ref3$contextUrl === void 0 ? '' : _ref3$contextUrl;\n  var parsedContextUrl = url.parse(contextUrl);\n  var firstSchemeInSpec = Array.isArray(spec.schemes) ? spec.schemes[0] : null;\n  var computedScheme = scheme || firstSchemeInSpec || stripNonAlpha(parsedContextUrl.protocol) || 'http';\n  var computedHost = spec.host || parsedContextUrl.host || '';\n  var computedPath = spec.basePath || '';\n  var res;\n\n  if (computedScheme && computedHost) {\n    var _context6;\n\n    // we have what we need for an absolute URL\n    res = _concatInstanceProperty(_context6 = \"\".concat(computedScheme, \"://\")).call(_context6, computedHost + computedPath);\n  } else {\n    // if not, a relative URL will have to do\n    res = computedPath;\n  } // If last character is '/', trim it off\n\n\n  return res[res.length - 1] === '/' ? _sliceInstanceProperty(res).call(res, 0, -1) : res;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}