{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport btoa from '../../helpers/btoa.node.js'; // This function runs after the common function,\n// `src/execute/index.js#buildRequest`\n\nexport default function buildRequest(options, req) {\n  var spec = options.spec,\n    operation = options.operation,\n    securities = options.securities,\n    requestContentType = options.requestContentType,\n    responseContentType = options.responseContentType,\n    attachContentTypeForEmptyPayload = options.attachContentTypeForEmptyPayload; // Add securities, which are applicable\n\n  req = applySecurities({\n    request: req,\n    securities: securities,\n    operation: operation,\n    spec: spec\n  });\n  if (req.body || req.form || attachContentTypeForEmptyPayload) {\n    var _context, _context2;\n\n    // all following conditionals are Swagger2 only\n    if (requestContentType) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (Array.isArray(operation.consumes)) {\n      var _operation$consumes = _slicedToArray(operation.consumes, 1);\n      req.headers['Content-Type'] = _operation$consumes[0];\n    } else if (Array.isArray(spec.consumes)) {\n      var _spec$consumes = _slicedToArray(spec.consumes, 1);\n      req.headers['Content-Type'] = _spec$consumes[0];\n    } else if (operation.parameters && _filterInstanceProperty(_context = operation.parameters).call(_context, function (p) {\n      return p.type === 'file';\n    }).length) {\n      req.headers['Content-Type'] = 'multipart/form-data';\n    } else if (operation.parameters && _filterInstanceProperty(_context2 = operation.parameters).call(_context2, function (p) {\n      return p.in === 'formData';\n    }).length) {\n      req.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n  } else if (requestContentType) {\n    var _context3, _context4;\n    var isBodyParamPresent = operation.parameters && _filterInstanceProperty(_context3 = operation.parameters).call(_context3, function (p) {\n      return p.in === 'body';\n    }).length > 0;\n    var isFormDataParamPresent = operation.parameters && _filterInstanceProperty(_context4 = operation.parameters).call(_context4, function (p) {\n      return p.in === 'formData';\n    }).length > 0;\n    if (isBodyParamPresent || isFormDataParamPresent) {\n      req.headers['Content-Type'] = requestContentType;\n    }\n  }\n  if (!responseContentType && Array.isArray(operation.produces) && operation.produces.length > 0) {\n    req.headers.accept = operation.produces.join(', ');\n  }\n  return req;\n} // Add security values, to operations - that declare their need on them\n\nexport function applySecurities(_ref) {\n  var request = _ref.request,\n    _ref$securities = _ref.securities,\n    securities = _ref$securities === void 0 ? {} : _ref$securities,\n    _ref$operation = _ref.operation,\n    operation = _ref$operation === void 0 ? {} : _ref$operation,\n    spec = _ref.spec;\n  var result = _objectSpread({}, request);\n  var _securities$authorize = securities.authorized,\n    authorized = _securities$authorize === void 0 ? {} : _securities$authorize,\n    _securities$specSecur = securities.specSecurity,\n    specSecurity = _securities$specSecur === void 0 ? [] : _securities$specSecur;\n  var security = operation.security || specSecurity;\n  var isAuthorized = authorized && !!_Object$keys(authorized).length;\n  var securityDef = spec.securityDefinitions;\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n  if (!_Object$keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n  security.forEach(function (securityObj) {\n    _Object$keys(securityObj).forEach(function (key) {\n      var auth = authorized[key];\n      if (!auth) {\n        return;\n      }\n      var token = auth.token;\n      var value = auth.value || auth;\n      var schema = securityDef[key];\n      var type = schema.type;\n      var tokenName = schema['x-tokenName'] || 'access_token';\n      var oauthToken = token && token[tokenName];\n      var tokenType = token && token.token_type;\n      if (auth) {\n        if (type === 'apiKey') {\n          var inType = schema.in === 'query' ? 'query' : 'headers';\n          result[inType] = result[inType] || {};\n          result[inType][schema.name] = value;\n        } else if (type === 'basic') {\n          if (value.header) {\n            result.headers.authorization = value.header;\n          } else {\n            var _context5;\n            var username = value.username || '';\n            var password = value.password || '';\n            value.base64 = btoa(_concatInstanceProperty(_context5 = \"\".concat(username, \":\")).call(_context5, password));\n            result.headers.authorization = \"Basic \".concat(value.base64);\n          }\n        } else if (type === 'oauth2' && oauthToken) {\n          var _context6;\n          tokenType = !tokenType || tokenType.toLowerCase() === 'bearer' ? 'Bearer' : tokenType;\n          result.headers.authorization = _concatInstanceProperty(_context6 = \"\".concat(tokenType, \" \")).call(_context6, oauthToken);\n        }\n      }\n    });\n  });\n  return result;\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","_filterInstanceProperty","_Object$keys","_concatInstanceProperty","btoa","buildRequest","options","req","spec","operation","securities","requestContentType","responseContentType","attachContentTypeForEmptyPayload","applySecurities","request","body","form","_context","_context2","headers","Array","isArray","consumes","_operation$consumes","_spec$consumes","parameters","call","p","type","length","in","_context3","_context4","isBodyParamPresent","isFormDataParamPresent","produces","accept","join","_ref","_ref$securities","_ref$operation","result","_securities$authorize","authorized","_securities$specSecur","specSecurity","security","isAuthorized","securityDef","securityDefinitions","query","forEach","securityObj","key","auth","token","value","schema","tokenName","oauthToken","tokenType","token_type","inType","name","header","authorization","_context5","username","password","base64","concat","_context6","toLowerCase"],"sources":["C:/Users/JRS GROUPS/Desktop/React/ftask/node_modules/swagger-client/es/execute/swagger2/build-request.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport btoa from '../../helpers/btoa.node.js'; // This function runs after the common function,\n// `src/execute/index.js#buildRequest`\n\nexport default function buildRequest(options, req) {\n  var spec = options.spec,\n      operation = options.operation,\n      securities = options.securities,\n      requestContentType = options.requestContentType,\n      responseContentType = options.responseContentType,\n      attachContentTypeForEmptyPayload = options.attachContentTypeForEmptyPayload; // Add securities, which are applicable\n\n  req = applySecurities({\n    request: req,\n    securities: securities,\n    operation: operation,\n    spec: spec\n  });\n\n  if (req.body || req.form || attachContentTypeForEmptyPayload) {\n    var _context, _context2;\n\n    // all following conditionals are Swagger2 only\n    if (requestContentType) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (Array.isArray(operation.consumes)) {\n      var _operation$consumes = _slicedToArray(operation.consumes, 1);\n\n      req.headers['Content-Type'] = _operation$consumes[0];\n    } else if (Array.isArray(spec.consumes)) {\n      var _spec$consumes = _slicedToArray(spec.consumes, 1);\n\n      req.headers['Content-Type'] = _spec$consumes[0];\n    } else if (operation.parameters && _filterInstanceProperty(_context = operation.parameters).call(_context, function (p) {\n      return p.type === 'file';\n    }).length) {\n      req.headers['Content-Type'] = 'multipart/form-data';\n    } else if (operation.parameters && _filterInstanceProperty(_context2 = operation.parameters).call(_context2, function (p) {\n      return p.in === 'formData';\n    }).length) {\n      req.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n  } else if (requestContentType) {\n    var _context3, _context4;\n\n    var isBodyParamPresent = operation.parameters && _filterInstanceProperty(_context3 = operation.parameters).call(_context3, function (p) {\n      return p.in === 'body';\n    }).length > 0;\n    var isFormDataParamPresent = operation.parameters && _filterInstanceProperty(_context4 = operation.parameters).call(_context4, function (p) {\n      return p.in === 'formData';\n    }).length > 0;\n\n    if (isBodyParamPresent || isFormDataParamPresent) {\n      req.headers['Content-Type'] = requestContentType;\n    }\n  }\n\n  if (!responseContentType && Array.isArray(operation.produces) && operation.produces.length > 0) {\n    req.headers.accept = operation.produces.join(', ');\n  }\n\n  return req;\n} // Add security values, to operations - that declare their need on them\n\nexport function applySecurities(_ref) {\n  var request = _ref.request,\n      _ref$securities = _ref.securities,\n      securities = _ref$securities === void 0 ? {} : _ref$securities,\n      _ref$operation = _ref.operation,\n      operation = _ref$operation === void 0 ? {} : _ref$operation,\n      spec = _ref.spec;\n\n  var result = _objectSpread({}, request);\n\n  var _securities$authorize = securities.authorized,\n      authorized = _securities$authorize === void 0 ? {} : _securities$authorize,\n      _securities$specSecur = securities.specSecurity,\n      specSecurity = _securities$specSecur === void 0 ? [] : _securities$specSecur;\n  var security = operation.security || specSecurity;\n  var isAuthorized = authorized && !!_Object$keys(authorized).length;\n  var securityDef = spec.securityDefinitions;\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n\n  if (!_Object$keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n\n  security.forEach(function (securityObj) {\n    _Object$keys(securityObj).forEach(function (key) {\n      var auth = authorized[key];\n\n      if (!auth) {\n        return;\n      }\n\n      var token = auth.token;\n      var value = auth.value || auth;\n      var schema = securityDef[key];\n      var type = schema.type;\n      var tokenName = schema['x-tokenName'] || 'access_token';\n      var oauthToken = token && token[tokenName];\n      var tokenType = token && token.token_type;\n\n      if (auth) {\n        if (type === 'apiKey') {\n          var inType = schema.in === 'query' ? 'query' : 'headers';\n          result[inType] = result[inType] || {};\n          result[inType][schema.name] = value;\n        } else if (type === 'basic') {\n          if (value.header) {\n            result.headers.authorization = value.header;\n          } else {\n            var _context5;\n\n            var username = value.username || '';\n            var password = value.password || '';\n            value.base64 = btoa(_concatInstanceProperty(_context5 = \"\".concat(username, \":\")).call(_context5, password));\n            result.headers.authorization = \"Basic \".concat(value.base64);\n          }\n        } else if (type === 'oauth2' && oauthToken) {\n          var _context6;\n\n          tokenType = !tokenType || tokenType.toLowerCase() === 'bearer' ? 'Bearer' : tokenType;\n          result.headers.authorization = _concatInstanceProperty(_context6 = \"\".concat(tokenType, \" \")).call(_context6, oauthToken);\n        }\n      }\n    });\n  });\n  return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}