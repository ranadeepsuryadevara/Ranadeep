{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _typeof from \"@babel/runtime-corejs3/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\n// This function runs after the common function,\n// `src/execute/index.js#buildRequest`\nimport { isPlainObject } from 'is-plain-object';\nimport get from 'lodash/get';\nimport btoa from '../../helpers/btoa.node.js';\nexport default function buildRequest(options, req) {\n  var operation = options.operation,\n    requestBody = options.requestBody,\n    securities = options.securities,\n    spec = options.spec,\n    attachContentTypeForEmptyPayload = options.attachContentTypeForEmptyPayload;\n  var requestContentType = options.requestContentType;\n  req = applySecurities({\n    request: req,\n    securities: securities,\n    operation: operation,\n    spec: spec\n  });\n  var requestBodyDef = operation.requestBody || {};\n  var requestBodyMediaTypes = _Object$keys(requestBodyDef.content || {});\n  var isExplicitContentTypeValid = requestContentType && requestBodyMediaTypes.indexOf(requestContentType) > -1; // for OAS3: set the Content-Type\n\n  if (requestBody || attachContentTypeForEmptyPayload) {\n    // does the passed requestContentType appear in the requestBody definition?\n    if (requestContentType && isExplicitContentTypeValid) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (!requestContentType) {\n      var firstMediaType = requestBodyMediaTypes[0];\n      if (firstMediaType) {\n        req.headers['Content-Type'] = firstMediaType;\n        requestContentType = firstMediaType;\n      }\n    }\n  } else if (requestContentType && isExplicitContentTypeValid) {\n    req.headers['Content-Type'] = requestContentType;\n  }\n  if (!options.responseContentType && operation.responses) {\n    var _context;\n    var mediaTypes = _filterInstanceProperty(_context = _Object$entries(operation.responses)).call(_context, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      var code = parseInt(key, 10);\n      return code >= 200 && code < 300 && isPlainObject(value.content);\n    }).reduce(function (acc, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        value = _ref4[1];\n      return _concatInstanceProperty(acc).call(acc, _Object$keys(value.content));\n    }, []);\n    if (mediaTypes.length > 0) {\n      req.headers.accept = mediaTypes.join(', ');\n    }\n  } // for OAS3: add requestBody to request\n\n  if (requestBody) {\n    if (requestContentType) {\n      if (requestBodyMediaTypes.indexOf(requestContentType) > -1) {\n        // only attach body if the requestBody has a definition for the\n        // contentType that has been explicitly set\n        if (requestContentType === 'application/x-www-form-urlencoded' || requestContentType === 'multipart/form-data') {\n          if (_typeof(requestBody) === 'object') {\n            var encoding = (requestBodyDef.content[requestContentType] || {}).encoding || {};\n            req.form = {};\n            _Object$keys(requestBody).forEach(function (k) {\n              req.form[k] = {\n                value: requestBody[k],\n                encoding: encoding[k] || {}\n              };\n            });\n          } else {\n            req.form = requestBody;\n          }\n        } else {\n          req.body = requestBody;\n        }\n      }\n    } else {\n      req.body = requestBody;\n    }\n  }\n  return req;\n} // Add security values, to operations - that declare their need on them\n// Adapted from the Swagger2 implementation\n\nexport function applySecurities(_ref5) {\n  var request = _ref5.request,\n    _ref5$securities = _ref5.securities,\n    securities = _ref5$securities === void 0 ? {} : _ref5$securities,\n    _ref5$operation = _ref5.operation,\n    operation = _ref5$operation === void 0 ? {} : _ref5$operation,\n    spec = _ref5.spec;\n  var result = _objectSpread({}, request);\n  var _securities$authorize = securities.authorized,\n    authorized = _securities$authorize === void 0 ? {} : _securities$authorize;\n  var security = operation.security || spec.security || [];\n  var isAuthorized = authorized && !!_Object$keys(authorized).length;\n  var securityDef = get(spec, ['components', 'securitySchemes']) || {};\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n  if (!_Object$keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n  security.forEach(function (securityObj) {\n    _Object$keys(securityObj).forEach(function (key) {\n      var auth = authorized[key];\n      var schema = securityDef[key];\n      if (!auth) {\n        return;\n      }\n      var value = auth.value || auth;\n      var type = schema.type;\n      if (auth) {\n        if (type === 'apiKey') {\n          if (schema.in === 'query') {\n            result.query[schema.name] = value;\n          }\n          if (schema.in === 'header') {\n            result.headers[schema.name] = value;\n          }\n          if (schema.in === 'cookie') {\n            result.cookies[schema.name] = value;\n          }\n        } else if (type === 'http') {\n          if (/^basic$/i.test(schema.scheme)) {\n            var _context2;\n            var username = value.username || '';\n            var password = value.password || '';\n            var encoded = btoa(_concatInstanceProperty(_context2 = \"\".concat(username, \":\")).call(_context2, password));\n            result.headers.Authorization = \"Basic \".concat(encoded);\n          }\n          if (/^bearer$/i.test(schema.scheme)) {\n            result.headers.Authorization = \"Bearer \".concat(value);\n          }\n        } else if (type === 'oauth2' || type === 'openIdConnect') {\n          var _context3;\n          var token = auth.token || {};\n          var tokenName = schema['x-tokenName'] || 'access_token';\n          var tokenValue = token[tokenName];\n          var tokenType = token.token_type;\n          if (!tokenType || tokenType.toLowerCase() === 'bearer') {\n            tokenType = 'Bearer';\n          }\n          result.headers.Authorization = _concatInstanceProperty(_context3 = \"\".concat(tokenType, \" \")).call(_context3, tokenValue);\n        }\n      }\n    });\n  });\n  return result;\n}","map":{"version":3,"names":["_objectSpread","_typeof","_slicedToArray","_Object$keys","_filterInstanceProperty","_Object$entries","_concatInstanceProperty","isPlainObject","get","btoa","buildRequest","options","req","operation","requestBody","securities","spec","attachContentTypeForEmptyPayload","requestContentType","applySecurities","request","requestBodyDef","requestBodyMediaTypes","content","isExplicitContentTypeValid","indexOf","headers","firstMediaType","responseContentType","responses","_context","mediaTypes","call","_ref","_ref2","key","value","code","parseInt","reduce","acc","_ref3","_ref4","length","accept","join","encoding","form","forEach","k","body","_ref5","_ref5$securities","_ref5$operation","result","_securities$authorize","authorized","security","isAuthorized","securityDef","query","Array","isArray","securityObj","auth","schema","type","in","name","cookies","test","scheme","_context2","username","password","encoded","concat","Authorization","_context3","token","tokenName","tokenValue","tokenType","token_type","toLowerCase"],"sources":["C:/Users/JRS GROUPS/Desktop/React/ftask/node_modules/swagger-client/es/execute/oas3/build-request.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _typeof from \"@babel/runtime-corejs3/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\n// This function runs after the common function,\n// `src/execute/index.js#buildRequest`\nimport { isPlainObject } from 'is-plain-object';\nimport get from 'lodash/get';\nimport btoa from '../../helpers/btoa.node.js';\nexport default function buildRequest(options, req) {\n  var operation = options.operation,\n      requestBody = options.requestBody,\n      securities = options.securities,\n      spec = options.spec,\n      attachContentTypeForEmptyPayload = options.attachContentTypeForEmptyPayload;\n  var requestContentType = options.requestContentType;\n  req = applySecurities({\n    request: req,\n    securities: securities,\n    operation: operation,\n    spec: spec\n  });\n  var requestBodyDef = operation.requestBody || {};\n\n  var requestBodyMediaTypes = _Object$keys(requestBodyDef.content || {});\n\n  var isExplicitContentTypeValid = requestContentType && requestBodyMediaTypes.indexOf(requestContentType) > -1; // for OAS3: set the Content-Type\n\n  if (requestBody || attachContentTypeForEmptyPayload) {\n    // does the passed requestContentType appear in the requestBody definition?\n    if (requestContentType && isExplicitContentTypeValid) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (!requestContentType) {\n      var firstMediaType = requestBodyMediaTypes[0];\n\n      if (firstMediaType) {\n        req.headers['Content-Type'] = firstMediaType;\n        requestContentType = firstMediaType;\n      }\n    }\n  } else if (requestContentType && isExplicitContentTypeValid) {\n    req.headers['Content-Type'] = requestContentType;\n  }\n\n  if (!options.responseContentType && operation.responses) {\n    var _context;\n\n    var mediaTypes = _filterInstanceProperty(_context = _Object$entries(operation.responses)).call(_context, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      var code = parseInt(key, 10);\n      return code >= 200 && code < 300 && isPlainObject(value.content);\n    }).reduce(function (acc, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n\n      return _concatInstanceProperty(acc).call(acc, _Object$keys(value.content));\n    }, []);\n\n    if (mediaTypes.length > 0) {\n      req.headers.accept = mediaTypes.join(', ');\n    }\n  } // for OAS3: add requestBody to request\n\n\n  if (requestBody) {\n    if (requestContentType) {\n      if (requestBodyMediaTypes.indexOf(requestContentType) > -1) {\n        // only attach body if the requestBody has a definition for the\n        // contentType that has been explicitly set\n        if (requestContentType === 'application/x-www-form-urlencoded' || requestContentType === 'multipart/form-data') {\n          if (_typeof(requestBody) === 'object') {\n            var encoding = (requestBodyDef.content[requestContentType] || {}).encoding || {};\n            req.form = {};\n\n            _Object$keys(requestBody).forEach(function (k) {\n              req.form[k] = {\n                value: requestBody[k],\n                encoding: encoding[k] || {}\n              };\n            });\n          } else {\n            req.form = requestBody;\n          }\n        } else {\n          req.body = requestBody;\n        }\n      }\n    } else {\n      req.body = requestBody;\n    }\n  }\n\n  return req;\n} // Add security values, to operations - that declare their need on them\n// Adapted from the Swagger2 implementation\n\nexport function applySecurities(_ref5) {\n  var request = _ref5.request,\n      _ref5$securities = _ref5.securities,\n      securities = _ref5$securities === void 0 ? {} : _ref5$securities,\n      _ref5$operation = _ref5.operation,\n      operation = _ref5$operation === void 0 ? {} : _ref5$operation,\n      spec = _ref5.spec;\n\n  var result = _objectSpread({}, request);\n\n  var _securities$authorize = securities.authorized,\n      authorized = _securities$authorize === void 0 ? {} : _securities$authorize;\n  var security = operation.security || spec.security || [];\n  var isAuthorized = authorized && !!_Object$keys(authorized).length;\n  var securityDef = get(spec, ['components', 'securitySchemes']) || {};\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n\n  if (!_Object$keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n\n  security.forEach(function (securityObj) {\n    _Object$keys(securityObj).forEach(function (key) {\n      var auth = authorized[key];\n      var schema = securityDef[key];\n\n      if (!auth) {\n        return;\n      }\n\n      var value = auth.value || auth;\n      var type = schema.type;\n\n      if (auth) {\n        if (type === 'apiKey') {\n          if (schema.in === 'query') {\n            result.query[schema.name] = value;\n          }\n\n          if (schema.in === 'header') {\n            result.headers[schema.name] = value;\n          }\n\n          if (schema.in === 'cookie') {\n            result.cookies[schema.name] = value;\n          }\n        } else if (type === 'http') {\n          if (/^basic$/i.test(schema.scheme)) {\n            var _context2;\n\n            var username = value.username || '';\n            var password = value.password || '';\n            var encoded = btoa(_concatInstanceProperty(_context2 = \"\".concat(username, \":\")).call(_context2, password));\n            result.headers.Authorization = \"Basic \".concat(encoded);\n          }\n\n          if (/^bearer$/i.test(schema.scheme)) {\n            result.headers.Authorization = \"Bearer \".concat(value);\n          }\n        } else if (type === 'oauth2' || type === 'openIdConnect') {\n          var _context3;\n\n          var token = auth.token || {};\n          var tokenName = schema['x-tokenName'] || 'access_token';\n          var tokenValue = token[tokenName];\n          var tokenType = token.token_type;\n\n          if (!tokenType || tokenType.toLowerCase() === 'bearer') {\n            tokenType = 'Bearer';\n          }\n\n          result.headers.Authorization = _concatInstanceProperty(_context3 = \"\".concat(tokenType, \" \")).call(_context3, tokenValue);\n        }\n      }\n    });\n  });\n  return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}