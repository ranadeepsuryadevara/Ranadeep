{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JRS GROUPS\\\\Desktop\\\\React\\\\ftask\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport FormInput from \"./components/FormInput\";\nimport SwaggerUI from \"swagger-ui-react\";\nimport \"swagger-ui-react/swagger-ui.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"Name\",\n    type: \"string\",\n    placeholder: \"Name\",\n    errorMessage: \"Name should be 5-15 characters and shouldn't include any special character!\",\n    label: \"Name\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"string\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 3,\n    name: \"password\",\n    type: \"string\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    label: \"Password\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 4,\n    name: \"mobileNumber\",\n    type: \"string\",\n    placeholder: \"Mobile Number\",\n    errorMessage: \"Name should be 5-15 characters and shouldn't include any special character!\",\n    label: \"Mobile\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 5,\n    name: \"userName\",\n    type: \"string\",\n    placeholder: \"UserName\",\n    errorMessage: \"Must Be Unique\",\n    label: \"UsrName\",\n    required: true\n  }];\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VIzTerqlBWi9ET0YLKXoDDFh/6c=\");\n_c = App;\nexport default App();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","FormInput","SwaggerUI","App","values","setValues","username","email","birthday","password","confirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","onChange","target","value","map","input"],"sources":["C:/Users/JRS GROUPS/Desktop/React/ftask/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport FormInput from \"./components/FormInput\";\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n\nconst App = () => {\n  const [values, setValues] = useState({\n\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"Name\",\n      type: \"string\",\n      placeholder: \"Name\",\n      errorMessage:\n        \"Name should be 5-15 characters and shouldn't include any special character!\",\n      label: \"Name\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"email\",\n      type: \"string\",\n      placeholder: \"Email\",\n      errorMessage: \"It should be a valid email address!\",\n      label: \"Email\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"password\",\n      type: \"string\",\n      placeholder: \"Password\",\n      errorMessage:\n        \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n      label: \"Password\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n      required: true,\n    },\n    {\n      id: 4,\n      name: \"mobileNumber\",\n      type: \"string\",\n      placeholder: \"Mobile Number\",\n      errorMessage:\n        \"Name should be 5-15 characters and shouldn't include any special character!\",\n      label: \"Mobile\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true,\n    },\n\n    {\n      id: 5,\n      name: \"userName\",\n      type: \"string\",\n      placeholder: \"UserName\",\n      errorMessage: \"Must Be Unique\",\n      label: \"UsrName\",\n      required: true,\n    },\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={handleSubmit}>\n        <h1>Submit Profile</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\n\nexport default App()"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAO,iCAAiC;AAAA;AAExC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC;IAEnCM,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EACV,6EAA6E;IAC/EC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,qBAAqB;IAC9BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,OAAO;IACpBC,YAAY,EAAE,qCAAqC;IACnDC,KAAK,EAAE,OAAO;IACdE,QAAQ,EAAE;EACZ,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,UAAU;IACvBC,YAAY,EACV,qGAAqG;IACvGC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAG,sEAAqE;IAC/EC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,eAAe;IAC5BC,YAAY,EACV,6EAA6E;IAC/EC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,qBAAqB;IAC9BC,QAAQ,EAAE;EACZ,CAAC,EAED;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,UAAU;IACvBC,YAAY,EAAE,gBAAgB;IAC9BC,KAAK,EAAE,SAAS;IAChBE,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;EACpB,CAAC;EAED,MAAMC,QAAQ,GAAIF,CAAC,IAAK;IACtBhB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACiB,CAAC,CAACG,MAAM,CAACX,IAAI,GAAGQ,CAAC,CAACG,MAAM,CAACC;IAAM,CAAC,CAAC;EAC3D,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAM,QAAQ,EAAEL,YAAa;MAAA,wBAC3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,EACtBT,MAAM,CAACe,GAAG,CAAEC,KAAK,iBAChB,QAAC,SAAS;QAAA,GAEJA,KAAK;QACT,KAAK,EAAEvB,MAAM,CAACuB,KAAK,CAACd,IAAI,CAAE;QAC1B,QAAQ,EAAEU;MAAS,GAHdI,KAAK,CAACf,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB,CAAC,eACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAzFIT,GAAG;AAAA,KAAHA,GAAG;AA4FT,eAAeA,GAAG,EAAE;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}