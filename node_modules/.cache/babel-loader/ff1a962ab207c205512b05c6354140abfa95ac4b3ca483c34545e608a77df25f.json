{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime-corejs3/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs3/helpers/createClass\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nvar ContextTree = /*#__PURE__*/function () {\n  function ContextTree(value) {\n    _classCallCheck(this, ContextTree);\n    this.root = createNode(value || {});\n  }\n  _createClass(ContextTree, [{\n    key: \"set\",\n    value: function set(path, value) {\n      var parent = this.getParent(path, true);\n      if (!parent) {\n        updateNode(this.root, value, null);\n        return;\n      }\n      var key = path[path.length - 1];\n      var children = parent.children;\n      if (children[key]) {\n        updateNode(children[key], value, parent);\n        return;\n      }\n      children[key] = createNode(value, parent);\n    } // Get the \"best\" node (node or nearest parent) and return its value.\n  }, {\n    key: \"get\",\n    value: function get(path) {\n      path = path || [];\n      if (path.length < 1) {\n        return this.root.value;\n      }\n      var branch = this.root;\n      var child;\n      var token;\n      for (var i = 0; i < path.length; i += 1) {\n        token = path[i];\n        child = branch.children;\n        if (!child[token]) {\n          break;\n        }\n        branch = child[token];\n      }\n      return branch && branch.protoValue;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent(path, ensureExists) {\n      if (!path || path.length < 1) {\n        return null;\n      }\n      if (path.length < 2) {\n        return this.root;\n      }\n      return _sliceInstanceProperty(path).call(path, 0, -1).reduce(function (branch, token) {\n        if (!branch) {\n          return branch;\n        }\n        var children = branch.children;\n        if (!children[token] && ensureExists) {\n          children[token] = createNode(null, branch);\n        }\n        return children[token];\n      }, this.root);\n    }\n  }]);\n  return ContextTree;\n}(); // =========================\n// Utilities\n// =========================\n\nexport { ContextTree as default };\nfunction createNode(value, parent) {\n  return updateNode({\n    children: {}\n  }, value, parent);\n}\nfunction updateNode(node, value, parent) {\n  node.value = value || {};\n  node.protoValue = parent ? _objectSpread(_objectSpread({}, parent.protoValue), node.value) : node.value;\n  _Object$keys(node.children).forEach(function (prop) {\n    var child = node.children[prop];\n    node.children[prop] = updateNode(child, child.value, node);\n  });\n  return node;\n}","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_sliceInstanceProperty","_Object$keys","ContextTree","value","root","createNode","key","set","path","parent","getParent","updateNode","length","children","get","branch","child","token","i","protoValue","ensureExists","call","reduce","default","node","forEach","prop"],"sources":["C:/Users/JRS GROUPS/Desktop/React/ftask/node_modules/swagger-client/es/specmap/lib/context-tree.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime-corejs3/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs3/helpers/createClass\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\n\nvar ContextTree = /*#__PURE__*/function () {\n  function ContextTree(value) {\n    _classCallCheck(this, ContextTree);\n\n    this.root = createNode(value || {});\n  }\n\n  _createClass(ContextTree, [{\n    key: \"set\",\n    value: function set(path, value) {\n      var parent = this.getParent(path, true);\n\n      if (!parent) {\n        updateNode(this.root, value, null);\n        return;\n      }\n\n      var key = path[path.length - 1];\n      var children = parent.children;\n\n      if (children[key]) {\n        updateNode(children[key], value, parent);\n        return;\n      }\n\n      children[key] = createNode(value, parent);\n    } // Get the \"best\" node (node or nearest parent) and return its value.\n\n  }, {\n    key: \"get\",\n    value: function get(path) {\n      path = path || [];\n\n      if (path.length < 1) {\n        return this.root.value;\n      }\n\n      var branch = this.root;\n      var child;\n      var token;\n\n      for (var i = 0; i < path.length; i += 1) {\n        token = path[i];\n        child = branch.children;\n\n        if (!child[token]) {\n          break;\n        }\n\n        branch = child[token];\n      }\n\n      return branch && branch.protoValue;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent(path, ensureExists) {\n      if (!path || path.length < 1) {\n        return null;\n      }\n\n      if (path.length < 2) {\n        return this.root;\n      }\n\n      return _sliceInstanceProperty(path).call(path, 0, -1).reduce(function (branch, token) {\n        if (!branch) {\n          return branch;\n        }\n\n        var children = branch.children;\n\n        if (!children[token] && ensureExists) {\n          children[token] = createNode(null, branch);\n        }\n\n        return children[token];\n      }, this.root);\n    }\n  }]);\n\n  return ContextTree;\n}(); // =========================\n// Utilities\n// =========================\n\n\nexport { ContextTree as default };\n\nfunction createNode(value, parent) {\n  return updateNode({\n    children: {}\n  }, value, parent);\n}\n\nfunction updateNode(node, value, parent) {\n  node.value = value || {};\n  node.protoValue = parent ? _objectSpread(_objectSpread({}, parent.protoValue), node.value) : node.value;\n\n  _Object$keys(node.children).forEach(function (prop) {\n    var child = node.children[prop];\n    node.children[prop] = updateNode(child, child.value, node);\n  });\n\n  return node;\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,8CAA8C;AACxE,OAAOC,eAAe,MAAM,+CAA+C;AAC3E,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,sBAAsB,MAAM,sDAAsD;AACzF,OAAOC,YAAY,MAAM,mDAAmD;AAE5E,IAAIC,WAAW,GAAG,aAAa,YAAY;EACzC,SAASA,WAAW,CAACC,KAAK,EAAE;IAC1BL,eAAe,CAAC,IAAI,EAAEI,WAAW,CAAC;IAElC,IAAI,CAACE,IAAI,GAAGC,UAAU,CAACF,KAAK,IAAI,CAAC,CAAC,CAAC;EACrC;EAEAJ,YAAY,CAACG,WAAW,EAAE,CAAC;IACzBI,GAAG,EAAE,KAAK;IACVH,KAAK,EAAE,SAASI,GAAG,CAACC,IAAI,EAAEL,KAAK,EAAE;MAC/B,IAAIM,MAAM,GAAG,IAAI,CAACC,SAAS,CAACF,IAAI,EAAE,IAAI,CAAC;MAEvC,IAAI,CAACC,MAAM,EAAE;QACXE,UAAU,CAAC,IAAI,CAACP,IAAI,EAAED,KAAK,EAAE,IAAI,CAAC;QAClC;MACF;MAEA,IAAIG,GAAG,GAAGE,IAAI,CAACA,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;MAC/B,IAAIC,QAAQ,GAAGJ,MAAM,CAACI,QAAQ;MAE9B,IAAIA,QAAQ,CAACP,GAAG,CAAC,EAAE;QACjBK,UAAU,CAACE,QAAQ,CAACP,GAAG,CAAC,EAAEH,KAAK,EAAEM,MAAM,CAAC;QACxC;MACF;MAEAI,QAAQ,CAACP,GAAG,CAAC,GAAGD,UAAU,CAACF,KAAK,EAAEM,MAAM,CAAC;IAC3C,CAAC,CAAC;EAEJ,CAAC,EAAE;IACDH,GAAG,EAAE,KAAK;IACVH,KAAK,EAAE,SAASW,GAAG,CAACN,IAAI,EAAE;MACxBA,IAAI,GAAGA,IAAI,IAAI,EAAE;MAEjB,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;QACnB,OAAO,IAAI,CAACR,IAAI,CAACD,KAAK;MACxB;MAEA,IAAIY,MAAM,GAAG,IAAI,CAACX,IAAI;MACtB,IAAIY,KAAK;MACT,IAAIC,KAAK;MAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,IAAI,CAACI,MAAM,EAAEM,CAAC,IAAI,CAAC,EAAE;QACvCD,KAAK,GAAGT,IAAI,CAACU,CAAC,CAAC;QACfF,KAAK,GAAGD,MAAM,CAACF,QAAQ;QAEvB,IAAI,CAACG,KAAK,CAACC,KAAK,CAAC,EAAE;UACjB;QACF;QAEAF,MAAM,GAAGC,KAAK,CAACC,KAAK,CAAC;MACvB;MAEA,OAAOF,MAAM,IAAIA,MAAM,CAACI,UAAU;IACpC;EACF,CAAC,EAAE;IACDb,GAAG,EAAE,WAAW;IAChBH,KAAK,EAAE,SAASO,SAAS,CAACF,IAAI,EAAEY,YAAY,EAAE;MAC5C,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;QAC5B,OAAO,IAAI;MACb;MAEA,IAAIJ,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;QACnB,OAAO,IAAI,CAACR,IAAI;MAClB;MAEA,OAAOJ,sBAAsB,CAACQ,IAAI,CAAC,CAACa,IAAI,CAACb,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,UAAUP,MAAM,EAAEE,KAAK,EAAE;QACpF,IAAI,CAACF,MAAM,EAAE;UACX,OAAOA,MAAM;QACf;QAEA,IAAIF,QAAQ,GAAGE,MAAM,CAACF,QAAQ;QAE9B,IAAI,CAACA,QAAQ,CAACI,KAAK,CAAC,IAAIG,YAAY,EAAE;UACpCP,QAAQ,CAACI,KAAK,CAAC,GAAGZ,UAAU,CAAC,IAAI,EAAEU,MAAM,CAAC;QAC5C;QAEA,OAAOF,QAAQ,CAACI,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAACb,IAAI,CAAC;IACf;EACF,CAAC,CAAC,CAAC;EAEH,OAAOF,WAAW;AACpB,CAAC,EAAE,CAAC,CAAC;AACL;AACA;;AAGA,SAASA,WAAW,IAAIqB,OAAO;AAE/B,SAASlB,UAAU,CAACF,KAAK,EAAEM,MAAM,EAAE;EACjC,OAAOE,UAAU,CAAC;IAChBE,QAAQ,EAAE,CAAC;EACb,CAAC,EAAEV,KAAK,EAAEM,MAAM,CAAC;AACnB;AAEA,SAASE,UAAU,CAACa,IAAI,EAAErB,KAAK,EAAEM,MAAM,EAAE;EACvCe,IAAI,CAACrB,KAAK,GAAGA,KAAK,IAAI,CAAC,CAAC;EACxBqB,IAAI,CAACL,UAAU,GAAGV,MAAM,GAAGZ,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEY,MAAM,CAACU,UAAU,CAAC,EAAEK,IAAI,CAACrB,KAAK,CAAC,GAAGqB,IAAI,CAACrB,KAAK;EAEvGF,YAAY,CAACuB,IAAI,CAACX,QAAQ,CAAC,CAACY,OAAO,CAAC,UAAUC,IAAI,EAAE;IAClD,IAAIV,KAAK,GAAGQ,IAAI,CAACX,QAAQ,CAACa,IAAI,CAAC;IAC/BF,IAAI,CAACX,QAAQ,CAACa,IAAI,CAAC,GAAGf,UAAU,CAACK,KAAK,EAAEA,KAAK,CAACb,KAAK,EAAEqB,IAAI,CAAC;EAC5D,CAAC,CAAC;EAEF,OAAOA,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}